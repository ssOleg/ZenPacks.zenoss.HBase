{{ZenPack
|Summary=This ZenPack provides status and performance monitoring of HBase.
|Organization=Zenoss, Inc.
|ZenPack name=ZenPacks.zenoss.HBase
|Source URI=
|Releases={{Release
|Version=
|Tag=
|Release date=
|Compatible with=Zenoss Core 4.2.x, Zenoss Resource Manager 4.1.x, Zenoss Resource Manager 4.2.x
|Requires=PythonCollector
}}
|Devices=
|Applications={{Application
|Product Name=HBase
}}
|Integrations=
|DataAudits=
|Binaries=
|Flavor=
}}

The <span class="zenpack">ZenPacks.zenoss.HBase</span> ZenPack monitors HBase 
clusters via ''Apache HBase REST Interface'' and Python 
<samp class="ph codeph">twisted.web.client</samp> asynchronous framework.

__TOC__

== Gallery ==
<gallery widths=250px heights=127px>
HBase Region Server.png
HBase Region.png
HBase Table.png
HBase Cluster graphs.png
HBase Impact.png
External Impact Relationships.png
</gallery>

== Features ==
The features added by this ZenPack can be summarized as follows.
They are each detailed further below.
* Discovery and periodic remodeling of relevant components.
* Performance monitoring.
* Event monitoring.
* Optional service impact with addition of Zenoss Service Dynamics product.

=== Discovery ===
The following components will be automatically discovered through zProperties you provide:
; Region Servers
: ''Attributes'': Name (DomainName:port), Start Code, Handler Count, Memstore Upper Limit, Memstore Lower Limit, Log Flush Interval
: ''Collections'': Regions
; Regions
: ''Attributes'': Table, Start Key, Region ID, Region Server, Memstore Flush Size, Max File Size
; Tables
: ''Attributes'': Name, Number of Column Families, Column Family Block Size, Compaction, Enabled

=== Performance Monitoring ===
The following metrics will be collected and graphed every 5 minutes by default:
; HBase Cluster Metrics
: ''Region Server Statistics'': The number of dead, live and overall number of Region Servers
: ''Performance'': Average load, Requests
; Region Servers
: ''Region Statistics'': Number of Regions, Storefiles and Stores
: ''Memory Usage'': Max and Used Heap Memory Size (MB)
: ''Storage Statistics'': Memstore Size (MB), Storefile Index Size (MB), Storefile Size (MB)
: ''Requests'': Read, Write, Requests/sec
: ''Blocks'': Block Cache Count, Block Cache Evicted Count, Block Cache Hit Ratio (%), Block Cache Hit Caching Ratio (%)
: ''Performance metrics'': Compaction Queue Length, Flush Queue Length, Call Queue Length
; Regions
: ''Storage Statistics'': Memstore Size (MB), Storefile Index Size (MB), Storefile Size (MB), Storefiles, Stores
: ''Requests'': Read, Write

=== Event monitoring ===
The following events will be triggered with respect to the monitored metrics:
;HBase Cluster
: ''Error'': Connection refused/Credentials not valid.
: ''Critical'': The percentage of dead servers exceeds 50%.
: ''Warning'': The percentage of dead servers exceeds 10%.
; Region Servers
: ''Error'': Connection refused/Credentials not valid.
: ''Error'': The server is dead.
: ''Warning'': The Memstore Size is nearing or exceeding its global.memstore.size (defaults to 40% of maxHeapSize).
: ''Info'': One or more region servers have been added/removed.
; Regions
: ''Error'': Connection refused/Credentials not valid.
: ''Warning'': The Memstore Size is nearing or exceeding its flush size (128MB by default).
: ''Warning'': The Storefile Size is nearing or exceeding the recommended maximum size (10GB by default).
; Tables
: ''Error'': Connection refused/Credentials not valid.
: ''Error'': The table is disabled or dropped.

=== Service Impact ===
When combined with the Zenoss Service Dynamics product, this ZenPack adds 
built-in service impact capability for HBase. The following service impact 
relationships are automatically added. These will be included in any services 
containing one or more of the explicitly mentioned entities.
;Service Impact Relationships
* Region failure affects related Table.
* Region Server failure affects related Regions.
* Region servers are affected by HBase hosting device  failure.
;External Impact Relationships
* Region servers are affected by hosting Hadoop Data Node failure.


== Usage ==
Use the following steps to start monitoring HBase:
# Select Infrastructure from the navigation bar.
# Click the device name in the device list. The device overview page appears.
# Select ''Configuration Properties'' from the left panel.
# Set ''zHBasePassword'', ''zHBaseUsername'' and select https for ''zHBaseScheme'' if you have Basic access authentication configured on your HBase master (otherwise leave ''zHBasePassword'' and ''zHBaseUsername'' blank).
# Set the ''zHBaseRestPort'', ''zHBaseMasterPort'' and ''zHBaseRegionServerPort'' zProperties, if the values for those ports differ from the default ones.
# Navigate to the ''Modeler plugins'' page of the device containing your HBase server, add the ''HBaseCollector'' and ''HBaseTableCollector'' modeler plugins.
# Select ''Model device'' from the gear menu.

----


Alternatively you can use zenbatchload to add HBase monitoring servers from the command line. 
To do this, you must create a text file with hostname, username and password of all the 
servers you want to add. The devices should be added under the target machine device class 
(e.g. '/Devices/Server/Linux' in the example below).

<syntaxhighlight lang="text">
/Devices/Server/Linux zCollectorPlugins=['HBaseCollector', 'HBaseTableCollector']
<HOST NAME> zHBaseRestPort='8080', zHBaseMasterPort='60010', zHBaseRegionServerPort='60030', zHBasePassword='<PASSWORD>', zHBaseUsername='<USERNAME>', zHBaseScheme='<http(s)>'
</syntaxhighlight>

You can then load the HBase monitoring servers into Zenoss Core or Resource Manager as devices with the following command.
<console>
$ ##i##zenbatchload <filename>
</console> 

=== Access Authentication to Apache HBase ===
Access authentication may be configured on the target machine in one of the following ways:
# apply appropriate firewall rules, which would permit only an explicit set of IP addresses permission to access HBase;
# configure proxy authentication.

== Prerequisites ==
This ZenPack uses the ''Apache HBase REST Interface'' for performance monitoring,
therefore the rest daemon should be started and running on 
the port specified in ''zHBaseRestProt'' zProperty.

You can start the rest daemon by executing the following command:
<code>bin/hbase-daemon.sh start rest</code>

Please make sure that the ports for the HBase Master web UI and Hbase Regionserver web UI are correctly set in ''zHBaseMasterPort'' and ''zHBaseRegionServerPort'' zProperties, and that the UI instances are running, as they are used for monitoring.

== Troubleshooting ==
Please refer to the Zenoss Service Dynamics documentation if you run into 
any of the following problems:
* ZenPack will not install
* Adding a device fails
* Don't understand how to add a device
* Don't understand how to model a device
If you cannot find the answer in the documentation, then Resource Manager (Service Dynamics) 
users should contact [https://support.zenoss.com Zenoss Customer Support]. 
Core users can use the #zenoss IRC channel or the community.zenoss.org forums.

== Installed Items ==
Installing this ZenPack will add the following items to your Zenoss system.
;Modeler Plugins
* HBaseCollector
* HBaseTableCollector
;Monitoring Templates
* HBaseCluster (in /Device)
* HBaseRegionServer (in /Device)
* HBaseHRegion (in /Device)
* HBaseTable (in /Device)
;Component Types
* HBaseRegionServer (on related device)
* HBaseHRegion (on HBaseRegionServer)
* HBaseTable (on related device)

== Daemons ==
{| class="wikitable"
!width="50%"|Type
!width="50%"|Name
|-
|Performance Collector
|zenpython
|}

{{ZenPackFooter}}
